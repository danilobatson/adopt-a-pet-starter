{"version":3,"sources":["api/petfinder/index.js","components/hero/index.js","pages/home/index.js","assets/logo.svg","components/search/index.js","components/navigation/index.js","App.js","reportWebVitals.js","index.js","mocks/handlers.js","mocks/browser.js"],"names":["getPets","a","type","query","searchParams","URLSearchParams","requestUrl","toString","fetch","method","response","json","getPetTypes","Hero","image","displayText","className","style","backgroundImage","backgroundBlendMode","backgroundSize","backgroundColor","getHeroTitle","HomePage","useState","data","setData","useEffect","petsData","getPetsData","length","map","animal","href","toLowerCase","id","src","photos","medium","alt","name","breeds","primary","colors","gender","Search","searchInputRef","useRef","onSubmit","e","preventDefault","current","value","ref","Navigation","petTypes","setPetTypes","types","getPetTypesData","Logo","_links","self","split","pop","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","worker","start","ReactDOM","render","StrictMode","document","getElementById","handlers","rest","get","_req","res","ctx","status","req","url","animals","filter","contact","address","state","includes","params","details","setupWorker"],"mappings":"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","file":"static/js/main.14fcaafa.chunk.js","sourcesContent":["export const getPets = async (type = '', query = '') => {\n  const searchParams = new URLSearchParams({ type, query });\n  const requestUrl = `/animals?${searchParams.toString()}`;\n\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getPetDetails = async (id) => {\n  const requestUrl = `/animals/${id}`;\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getPetTypes = async () => {\n  const requestUrl = `/types`;\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n","import React from 'react';\n\nconst Hero = ({ image, displayText }) => {\n  const type = ''\n\n  return (\n    <div\n      className=\"hero-container\"\n      style={{\n        backgroundImage: `linear-gradient(black, black), url(\"${\n          image || 'pets-hero.png'\n        }\")\n          `,\n        backgroundBlendMode: 'saturation',\n        backgroundSize: 'cover',\n        backgroundColor: '#0000008f'\n      }}\n    >\n      <h2>{displayText || getHeroTitle(type)}</h2>\n    </div>\n  );\n};\n\nexport default Hero;\n\nconst getHeroTitle = (type) => {\n  switch (type) {\n    case 'dog':\n      return 'Dogs';\n    case 'cat':\n      return 'Cats';\n    case 'rabbit':\n      return 'Rabbits';\n    case 'bird':\n      return 'Birds';\n    default:\n      return 'Find your perfect pet';\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPets } from '../../api/petfinder';\nimport Hero from '../../components/hero';\nimport Pet from '../../components/pet';\n\nconst HomePage = () => {\n  const [data, setData] = useState(null);\n  const type = ''; // Fix me!\n\n  useEffect(() => {\n    async function getPetsData() {\n      const petsData = await getPets(type);\n      setData(petsData);\n    }\n\n    getPetsData();\n  }, [type]);\n\n  if (!data) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <div className=\"page\">\n      <Hero />\n      <h3>\n        <span className=\"pet-type-label\">{type ? `${type}s` : 'Pets'}</span>{' '}\n        available for adoption near you\n      </h3>\n\n      {data.length ? (\n        <div className=\"grid\">\n          {data.map((animal) => (\n            <a // Change me to a Link!\n              key={animal.id}\n              href={`/${animal.type.toLowerCase()}/${animal.id}`}\n              className=\"pet\"\n            >\n              <article>\n                <div className=\"pet-image-container\">\n                  {\n                    <img\n                      className=\"pet-image\"\n                      src={\n                        animal.photos[0]?.medium ||\n                        '/missing-animal.png'\n                      }\n                      alt=\"\"\n                    />\n                  }\n                </div>\n                <h3>{animal.name}</h3>\n                <p>Breed: {animal.breeds.primary}</p>\n                <p>Color: {animal.colors.primary}</p>\n                <p>Gender: {animal.gender}</p>\n              </article>\n            </a> // Don't forget to change me!\n          ))}\n        </div>\n      ) : (\n        <p className=\"prompt\">No {type}s available for adoption now.</p>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n","export default __webpack_public_path__ + \"static/media/logo.c7c56d31.svg\";","import React, { useRef } from 'react';\n\n// import useHistory here.\n\nconst Search = () => {\n\n  // get the history object here\n\n  const searchInputRef = useRef();\n\n  const onSearchHandler = (e) => {\n    e.preventDefault();\n\n    const searchQuery = new URLSearchParams({\n      name: searchInputRef.current.value\n    }).toString();\n\n    // imperatively redirect with history.push()\n  };\n\n  return (\n    <form onSubmit={onSearchHandler} className=\"search-form\">\n      <input type=\"text\" className=\"search\" ref={searchInputRef} />\n      <button type=\"submit\" className=\"search-button\">\n        ðŸ”Ž\n      </button>\n    </form>\n  );\n};\n\nexport default Search;\n","import React, { useEffect, useState } from 'react';\nimport { getPetTypes } from '../../api/petfinder';\nimport Logo from '../../assets/logo.svg';\nimport Search from '../search';\n\nconst Navigation = () => {\n  const [petTypes, setPetTypes] = useState([]);\n\n  useEffect(() => {\n    async function getPetTypesData() {\n      const { types } = await getPetTypes();\n      setPetTypes(types);\n    }\n\n    getPetTypesData();\n  }, []);\n\n  return (\n    <nav>\n      <div className=\"nav-logo\">\n        <img src={Logo} alt=\"Petlover\" />\n        <Search />\n      </div>\n      <ul className=\"nav-links\">\n        <li key=\"all\">\n          {/* This link should have an activeClassName and exact prop */}\n          <a\n            href=\"/\"\n            className=\"nav-link\"\n          >\n            All Pets\n          </a>\n        </li>\n        {petTypes\n          ? petTypes.map((type) => (\n              <li key={type.name}>\n                {/* These links should have an activeClassName prop */}\n                <a\n                  href={`/${type._links.self.href.split('/').pop()}`}\n                  key={type.name}\n                  className=\"nav-link\"\n                >\n                  {type.name}s\n                </a>{' '}\n              </li>\n            ))\n          : 'Loading...'}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import HomePage from './pages/home';\nimport SearchPage from './pages/search';\nimport PetDetailsPage from './pages/detail';\nimport PetDetailsNotFound from './pages/petDetailsNotFound';\nimport Navigation from './components/navigation';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  NavLink\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Navigation />\n      <Route path=\"/:type?n\">\n      <HomePage />\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst { worker } = require('./mocks/browser');\nworker.start();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { rest } from 'msw';\nimport types from './data/types.json';\nimport animals from './data/animals.json';\nimport details from './data/details.json';\n\nexport const handlers = [\n  rest.get('/types', (_req, res, ctx) => {\n    return res(ctx.status(200), ctx.json(types));\n  }),\n  rest.get('/animals', (req, res, ctx) => {\n    const type = req.url.searchParams.get('type');\n    const query = req.url.searchParams.get('query');\n    let response = animals.animals;\n\n    if (type !== '') {\n      response = response.filter(\n        (animal) => animal.type.toLowerCase() === type.toLowerCase()\n      );\n    }\n    if (query !== '') {\n      response = response.filter(\n        (animal) =>\n          animal.contact.address.state\n            .toLowerCase()\n            .includes(query.toLowerCase()) ||\n          animal.name.toLowerCase().includes(query.toLowerCase())\n      );\n    }\n    return res(ctx.status(200), ctx.json(response));\n  }),\n  rest.get('/animals/:id', (req, res, ctx) => {\n    const { id } = req.params;\n    let response = details[id];\n\n    if (!response) {\n      return res(ctx.status(404));\n    }\n\n    return res(ctx.status(200), ctx.json(response));\n  })\n];\n","import { setupWorker } from 'msw';\nimport { handlers } from './handlers';\n\nexport const worker = setupWorker(...handlers);\n"],"sourceRoot":""}